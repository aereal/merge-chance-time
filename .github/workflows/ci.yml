---

name: ci
on:
  pull_request:
  push:
    branches: [master]
jobs:
  app-test:
    name: app/test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1.1.2
        with:
          go-version: 1.14.x
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: install
        run: go get -v all
      - name: test
        run: go test -cover -v ./...
      - name: lint
        uses: reviewdog/action-golangci-lint@v1
        with:
          github_token: ${{ secrets.github_token }}
  app-deploy:
    name: app/deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
      - app-test
    steps:
      - uses: actions/checkout@v2
      - name: setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@8958ac65db5da419b56f4ffbefc673774ba1434e
        with:
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
          version: '272.0.0'
      - name: create app.yaml
        run: |
          make build
        env:
          GH_APP_CLIENT_ID: ${{ secrets.GH_APP_CLIENT_ID }}
          GH_APP_CLIENT_SECRET: ${{ secrets.GH_APP_CLIENT_SECRET }}
          GH_APP_IDENTIFIER: ${{ secrets.GH_APP_IDENTIFIER }}
      - name: export private key
        run: |
          echo "${{ secrets.GH_APP_PRIVATE_KEY }}" > ./github-app.private-key.pem
          mkdir -p ./keys/
          echo "${{ secrets.TOKEN_PRIVATE_KEY }}" > ./keys/private.pem
      - name: deploy
        run: |
          gcloud app deploy --quiet --project merge-chance-time ./app.yaml
        env:
          CI: true
  front-test:
    name: front/test
    runs-on: ubuntu-latest
    steps:
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      -
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: install
        run: yarn install --frozen-lockfile
      - name: lint
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          eslint_flags: '--ext .ts front/src/**/*'
      - name: test
        run: yarn test
        env:
          CI: true
